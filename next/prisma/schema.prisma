// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?      @unique
  tz             String
  location       String?
  avatar         String?
  coords         Coordinates?
  inviteCode     String
  hashedPassword String
  updatedAt      DateTime     @updatedAt
  createdAt      DateTime     @default(now())
  accounts       Account[]
  sessions       Session[]
  TeamMember     TeamMember[]
  teamId         String?      @db.ObjectId

  @@map("users")
}

type Coordinates {
  lat  Float?
  long Float?
}

// model Example {
//   id        String   @id @default(cuid())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// Necessary for Next auth
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  // identifier String
  token   String   @unique
  expires DateTime

  @@unique([id, token])
}

model Team {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  slug       String   @unique
  name       String
  admins     String[] @db.ObjectId
  inviteHash String

  updatedAt  DateTime     @updatedAt
  createdAt  DateTime     @default(now())
  TeamMember TeamMember[]

  @@map("teams")
}

model TeamMember {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  member User   @relation(fields: [user], references: [id])
  t      Team   @relation(fields: [team], references: [id])
  user   String @db.ObjectId
  team   String @db.ObjectId

  @@map("teammembers")
}
